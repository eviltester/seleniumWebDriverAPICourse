<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.seleniumsimplified.webdriver</groupId>
    <artifactId>webdriverbasics</artifactId>
    <version>3.5.3</version>
    <packaging>jar</packaging>

    <name>webDriverbasics</name>
    <url>http://seleniumsimplified.com</url>


    <!-- if you encounter issues using Firefox then please read the Firefox47.pdf in \docs -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- <webdriver.version>2.53.1</webdriver.version> -->
        <!-- AllBrowserTests: webdriver 3.3.1 Chromedriver 2.32 and Chrome 61.0.3163.100 - clean run -->
        <!-- AllBrowserTests: webdriver 3.5.3 Chromedriver 2.32 and Chrome 61.0.3163.100 - clean run -->
        <!-- course based around webdriver 3.12.0  and htmlunit driver 2.28.1-->
        <!-- 	3.13 -->
        <webdriver.version>3.141.59</webdriver.version>
        <htmlunitdriver.version>2.36.0</htmlunitdriver.version>

        <junit.version>4.12</junit.version>
        <hamcrest.version>1.3</hamcrest.version>


    </properties>


    <dependencies>



     <!-- Full access to hamcrest matchers

     JUnit 4.12 automatically adds hamcrest-core
     or you can add hamcrest-all for everything if you don't want to think about it
    -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest.version}</version>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>




        <dependency>
            <!-- bring in the full selenium deploy
                 we could be more selective and bring
                 only what we need -->
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-server</artifactId>
            <version>${webdriver.version}</version>

            <!--
            Note that with Selenium 3.0.0 we may need to exclude TestNG
            we certainly need to do this with Selenium 3.0.0-beta2
            -->
            <!--
                <exclusions>
                    <exclusion>
                        <groupId>org.testng</groupId>
                        <artifactId>testng</artifactId>
                    </exclusion>
                </exclusions>
            -->
        </dependency>


        <!-- from WebDriver 2.53.0 HTMLUnit is no longer distributed with Selenium WebDriver -->
        <!-- https://github.com/SeleniumHQ/htmlunit-driver -->
        <!-- need to bring in the htmlunit driver on its own -->
        <!-- https://github.com/SeleniumHQ/selenium/blob/master/java/CHANGELOG -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>htmlunit-driver</artifactId>
            <version>${htmlunitdriver.version}</version>
        </dependency>

    </dependencies>

    <!-- I have added the build section to support importing into
	     IntelliJ automatically without throwing errors about wrong Java
		 Version. This basically says the source requires at least Java 1.8
		 and use a compiler that outputs Java 1.8

         Selenium WebDriver 3 will require Java 1.8 so I have increased the
         numbers in preparation, which means you need to install a JDK 1.8 (minimum)

		 You can use 1.7 or 1.6 for Selenium WebDriver 2.53.1 and below
    -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
					<target>1.8</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- examples of how to use the profiles from the command line -->
    <!-- mvn test
                will run the anyBrowserTests profile -->
    <!-- mvn test -PanyBrowserTests
                will run the anyBrowserTests profile -->
    <!-- mvn test -Dselenium2basics.webdriver=CHROME
                will run the anyBrowserTests using CHROME -->
    <!-- mvn test -PchromeTests -Dselenium2basics.webdriver=CHROME
                will run the tests that should pass on CHROME using CHROME -->
    <!-- mvn test -Dselenium2basics.webdriver=GRID -DWEBDRIVER_GRID_URL=http://id@ondemand.saucelabs.com:80/wd/hub -DWEBDRIVER_GRID_BROWSER=firefox -DWEBDRIVER_GRID_BROWSER_VERSION=39.0 -DWEBDRIVER_GRID_BROWSER_PLATFORM="Windows 7"
                will use saucelabs to run the tests on firefox
    -->

    <!-- we can also run any of the suites from the command line -->
    <!-- mvn test -Dtest=AllBrowserSuite
            would run the AllBrowserSuite on the default browser FIREFOX -->
    <!-- mvn test -Dtest=EmptySuite
        would run the EmptySuite - which has no tests! -->
    <!-- mvn test -Dtest=MarionetteSuite -Dselenium2basics.webdriver=FIREFOXMARIONETTE
        would run the passing marionette tests on the Marionette Driver with Firefox -->

    <profiles>
        <profile>
            <id>anyBrowserTests</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.14.1</version>
                        <configuration>
                            <includes>
                                <include>**/AllBrowserSuite.class</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
